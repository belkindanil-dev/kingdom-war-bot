import random
import asyncio
from telegram import InlineKeyboardMarkup, InlineKeyboardButton

async def process_attack(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    kingdom = get_or_create_kingdom(user_id)
    attack_type = query.data

    # –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –Ω–∞–≥—Ä–∞–¥—ã
    rewards = {
        'attack_weak': {'gold': 100, 'food': 50},
        'attack_medium': {'gold': 250, 'food': 120}
    }
    cost = {'attack_weak': 50, 'attack_medium': 150}

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–æ–ª–æ—Ç–æ
    if kingdom.resources['gold'] < cost[attack_type]:
        await query.edit_message_text(
            text="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –∞—Ç–∞–∫–∏!",
            reply_markup=main_menu()
        )
        return

    # –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
    kingdom.resources['gold'] -= cost[attack_type]

    # üéû –ì–∏—Ñ–∫–∏ —Å —Ä—ã—Ü–∞—Ä—è–º–∏
    battle_gifs = {
        'attack_weak': "https://media.giphy.com/media/QBd2kLB5qDmysEXre9/giphy.gif",   # –ë–æ–π —Ä—ã—Ü–∞—Ä–µ–π
        'attack_medium': "https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif"   # –≠–ø–∏—á–Ω–∞—è –±–∏—Ç–≤–∞
    }
    victory_gif = "https://media.giphy.com/media/26tOZ42Mg6pbTUPHW/giphy.gif"
    defeat_gif = "https://media.giphy.com/media/d2lcHJTG5Tscg/giphy.gif"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–∏—Ñ–∫—É –±–∏—Ç–≤—ã
    battle_msg = await query.message.reply_animation(
        animation=battle_gifs[attack_type],
        caption="‚öîÔ∏è –°—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å..."
    )

    # –ó–∞–¥–µ—Ä–∂–∫–∞ (–∏–º–∏—Ç–∞—Ü–∏—è –±–∏—Ç–≤—ã)
    await asyncio.sleep(3)

    # –£–¥–∞–ª—è–µ–º –≥–∏—Ñ–∫—É –±–∏—Ç–≤—ã
    try:
        await context.bot.delete_message(chat_id=query.message.chat_id, message_id=battle_msg.message_id)
    except Exception:
        pass  # –ï—Å–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –æ—à–∏–±–∫–∞ Telegram

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å—Ö–æ–¥ –±–∏—Ç–≤—ã
    outcome = random.choice(["win", "lose"])

    if outcome == "win":
        reward = rewards[attack_type]
        kingdom.resources['gold'] += reward['gold']
        kingdom.resources['food'] += reward['food']

        # –ì–∏—Ñ–∫–∞ –ø–æ–±–µ–¥—ã
        victory_msg = await query.message.reply_animation(
            animation=victory_gif,
            caption=f"üèÜ –ü–æ–±–µ–¥–∞!\n\nüí∞ +{reward['gold']} –∑–æ–ª–æ—Ç–∞\nüåæ +{reward['food']} –µ–¥—ã"
        )
        await asyncio.sleep(3)
        # –£–¥–∞–ª—è–µ–º –≥–∏—Ñ–∫—É –ø–æ–±–µ–¥—ã
        try:
            await context.bot.delete_message(chat_id=query.message.chat_id, message_id=victory_msg.message_id)
        except Exception:
            pass

        await query.message.reply_text(
            "‚öîÔ∏è –ë–∏—Ç–≤–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞:",
            reply_markup=main_menu()
        )

    else:
        # –ì–∏—Ñ–∫–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏—è
        defeat_msg = await query.message.reply_animation(
            animation=defeat_gif,
            caption="üíÄ –ü–æ—Ä–∞–∂–µ–Ω–∏–µ... –¢—ã –ø–æ—Ç–µ—Ä—è–ª –Ω–µ–º–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–æ–≤."
        )
        await asyncio.sleep(3)
        try:
            await context.bot.delete_message(chat_id=query.message.chat_id, message_id=defeat_msg.message_id)
        except Exception:
            pass

        # –ù–∞–∫–∞–∑–∞–Ω–∏–µ –∑–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ
        lost_gold = min(100, kingdom.resources['gold'] // 10)
        lost_food = min(50, kingdom.resources['food'] // 10)
        kingdom.resources['gold'] -= lost_gold
        kingdom.resources['food'] -= lost_food

        await query.message.reply_text(
            f"üò¢ –ü–æ—Ç–µ—Ä–∏:\nüí∞ -{lost_gold} –∑–æ–ª–æ—Ç–∞\nüåæ -{lost_food} –µ–¥—ã",
            reply_markup=main_menu()
        )
